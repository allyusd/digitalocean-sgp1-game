map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# minesweeper.snowbellstudio.com
server {
    listen       80;
    listen       [::]:80;
    server_name  minesweeper.snowbellstudio.com;

    location / {
      return 301 https://$host$request_uri;
    }
}

server {
  listen 443       ssl http2;
  listen [::]:443  ssl http2;
  server_name      minesweeper.snowbellstudio.com;

  ssl_certificate         /etc/letsencrypt/live/minesweeper.snowbellstudio.com/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/minesweeper.snowbellstudio.com/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/minesweeper.snowbellstudio.com/chain.pem;
  ssl_protocols TLSv1.3 TLSv1.2;
  # ssl_prefer_server_ciphers off;
  # ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  client_max_body_size 10M;

  location / {
      resolver 127.0.0.11 valid=30s; # Docker's DNS server
      set $upstream_minesweeper nginx_minesweeper;
      proxy_pass http://$upstream_minesweeper;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_redirect off;
  }
}

server {
  listen 3000       ssl http2;
  listen [::]:3000  ssl http2;
  server_name       minesweeper.snowbellstudio.com;

  ssl_certificate         /etc/letsencrypt/live/minesweeper.snowbellstudio.com/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/minesweeper.snowbellstudio.com/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/minesweeper.snowbellstudio.com/chain.pem;
  ssl_protocols TLSv1.3 TLSv1.2;
  # ssl_prefer_server_ciphers off;
  # ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  client_max_body_size 10M;

  location / {
      resolver 127.0.0.11 valid=30s; # Docker's DNS server
      set $upstream_minesweeper nginx_minesweeper;
      proxy_pass http://$upstream_minesweeper:3000/;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
  }
}
